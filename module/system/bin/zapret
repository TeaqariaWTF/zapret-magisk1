#!/system/bin/sh

MODPATH="/data/adb/modules/zapret"
CURRENTSTRATEGY=$(cat "$MODPATH/current-strategy" 2>/dev/null || echo "Unknown")
CURRENTDNS=$(cat "$MODPATH/current-dns" 2>/dev/null || echo "Unknown")
CURRENTDNSMODE=$(cat "$MODPATH/current-dns-mode" 2>/dev/null || echo "Unknown")

start_service() {
    if pgrep -f "nfqws" > /dev/null; then
        echo "! nfqws is already started"
    else
        nohup "$MODPATH/service.sh" > /dev/null 2>&1 &
        echo "- Service started"
    fi
}

stop_service() {
    iptables -t mangle -F PREROUTING
    iptables -t mangle -F POSTROUTING

    for pid in $(pgrep -f "zapret.sh"); do
        kill -9 "$pid"
    done

    pkill nfqws
    echo "- Service stopped"
}

toggle_service() {
    if pgrep -f "nfqws" > /dev/null; then
        stop_service
    else
        start_service
    fi
}

restart_service() {
    stop_service
    sleep 1
    start_service
}

select_tactic() {
    echo "- Available tactics:"
    for tactic in "$MODPATH/strategies"/*.sh; do
        echo "$(basename "$tactic" .sh)"
    done
    echo "- Enter the tactic:"
    read -r user_tactic

    if [ -f "$MODPATH/strategies/$user_tactic.sh" ]; then
        echo "$user_tactic" > "$MODPATH/current-strategy"
        echo "- Done!"
        echo "- Run 'zapret restart' to use this config now"
    else
        echo "! Invalid tactic name"
    fi
}

select_dns_mode() {
    echo "- Select DNS Mode:"
    echo "0 - Nothing"
    echo "1 - Plain DNS"
    echo "2 - With DNSCrypt"
    echo "Enter the DNS mode:"
    read -r dns_mode

    case "$dns_mode" in
        0)
            echo "0" > "$MODPATH/current-dns-mode"
            echo "- Done"
            ;;
        1)
            echo "1" > "$MODPATH/current-dns-mode"
            echo "- Done"
            ;;
        2)
            echo "2" > "$MODPATH/current-dns-mode"
            echo "- Done"
            ;;
        *)
            echo "! Invalid DNS Mode choice"
            ;;
    esac
    echo "- Run 'zapret restart' to apply changes"
}

select_plain_dns() {
    if [ "$CURRENTDNSMODE" -eq 2 ]; then
        echo "! Please change the DNS mode"
        return
    fi

    echo "! Be sure if DNS address in port 53"
    echo "- Enter the DNS address (IPv4):"
    read -r user_dns

    if ! echo "$user_dns" | grep -qE '^([0-9]{1,3}\.){3}[0-9]{1,3}$'; then
        echo "! Invalid DNS address"
        return 1
    fi

    echo "$user_dns" > "$MODPATH/current-dns"
    echo "- Plain DNS set!"
    echo "- Run 'zapret restart' to use this config now"
}

command_info() {
    echo "@ Zapret Module - GitHub: sevcator/zapret-magisk <3"
    echo ""
    echo "- Current strategy: $CURRENTSTRATEGY"

    if [ "$CURRENTDNSMODE" -eq 2 ]; then
        echo "- Current DNS Mode: DNSCrypt-Proxy"
    elif [ "$CURRENTDNSMODE" -eq 1 ]; then
        echo "- Current DNS Mode: Plain ($CURRENTDNS)"
    elif [ "$CURRENTDNSMODE" -eq 0 ]; then
        echo "- Current DNS Mode: None"
    else
        echo "- Current DNS Mode: $CURRENTDNS"
    fi

    echo ""
    echo "- Available commands:"
    echo "zapret start    - Start the zapret service"
    echo "zapret stop     - Stop the zapret service"
    echo "zapret restart  - Restart the zapret service"
    echo "zapret toggle   - Toggle the zapret service"
    echo "zapret strategy - Pick a strategy for DPI modification"
    echo "zapret dnsmode  - Choose DNS mode"
    echo "zapret plaindns - Pick a plain DNS address (need to change DNS mode)"
}

unknown_command() {
    echo "! Unknown command: $1"
    echo "- Run 'zapret' for a list of available commands."
}

if [ -z "$1" ]; then
    command_info
else
    case "$1" in
        start)
            start_service
            ;;
        stop)
            stop_service
            ;;
        toggle)
            toggle_service
            ;;
        restart)
            restart_service
            ;;
        strategy)
            select_tactic
            ;;
        dnsmode)
            select_dns_mode
            ;;
        plaindns)
            select_plain_dns
            ;;
        *)
            unknown_command "$1"
            ;;
    esac
fi
