MODPATH="/data/adb/modules/zapret"
CURRENTSTRATEGY=$(cat "$MODPATH/config/current-strategy" 2>/dev/null || echo "Unknown")
DNSCRYPTENABLE=$(cat "$MODPATH/config/dnscrypt-enable" 2>/dev/null || echo "Unknown") 
CLOAKINGUPDATE=$(cat "$MODPATH/config/dnscrypt-cloaking-update" 2>/dev/null || echo "0")
CLOAKINGRULESLINK=$(cat "$MODPATH/config/cloaking-rules-link" 2>/dev/null || echo "")

command_info() {
    echo "! Zapret Module for Magisk; @sevcator/zapret-magisk"
    echo "- Current strategy: $CURRENTSTRATEGY"
    case "$DNSCRYPTENABLE" in
        1) echo "- DNSCrypt-Proxy enabled" ;;
        0) echo "- No DNS" ;;
        *) echo "- Unknown DNS state" ;;
    esac
    echo ""
    echo "- Available commands:"
    echo "zapret start    - Start the zapret service"
    echo "zapret stop     - Stop the zapret service"
    echo "zapret restart  - Restart the zapret service"
    echo "zapret toggle   - Toggle the zapret service"
    echo "zapret setup    - Configure the zapret service"
}

start_service() {
    pgrep -f "nfqws" > /dev/null && echo "! nfqws is already running" || ( "$MODPATH/service.sh" > /dev/null 2>&1 & echo "- Service started" )
}

stop_service() {
    su -c "$MODPATH/uninstall.sh" > /dev/null 2>&1 & echo "- Service stopped"
}

toggle_service() {
    pgrep -f "nfqws" > /dev/null && stop_service || start_service
}

restart_service() {
    stop_service
    sleep 1
    start_service
}

setup() {
    mkdir -p "$MODPATH/config"
    printf "%s" "- Do you want to enable DNSCrypt-Proxy? "
    read -r response
    dns_mode="0"
    case "${response:-n}" in
        [yY]|[yY][eE][sS]) dns_mode="1" ;;
    esac
    echo "- Available strategies:"
    strategy_list=()
    while IFS= read -r file; do
        strategy_name=$(basename "$file" .sh)
        echo "  * $strategy_name"
        strategy_list+=("$strategy_name")
    done < <(find "$MODPATH/strategy" -type f -name "*.sh" 2>/dev/null)

    printf "%s" "- Enter the strategy name: "
    read -r user_strategy

    if [ ! -f "$MODPATH/strategy/${user_strategy}.sh" ]; then
        echo "! Invalid or empty strategy, using current: $CURRENTSTRATEGY"
        user_strategy="$CURRENTSTRATEGY"
    fi

    if [ "$dns_mode" = "1" ]; then
        printf "%s" "- Auto-update hosts for DNSCrypt-Proxy? "
        read -r update_response
        case "${update_response:-n}" in
            [yY]|[yY][eE][sS])
                CLOAKINGUPDATE="1"
                printf "%s\n" "- Current link: $CLOAKINGRULESLINK"
                printf "%s" "- Enter new link to hosts file (leave empty to keep): "
                read -r new_link
                if [ -n "$new_link" ]; then
                    if curl -fsSL --head "$new_link" >/dev/null 2>&1 || wget -q --spider "$new_link"; then
                        CLOAKINGRULESLINK="$new_link"
                    else
                        echo "! Link not reachable, keeping old"
                    fi
                else
                    echo "- No changes to link, keep current: $CLOAKINGRULESLINK"
                fi
                ;;
        esac
    fi
    echo "$dns_mode" > "$MODPATH/config/dnscrypt-enable"
    echo "$CLOAKINGUPDATE" > "$MODPATH/config/dnscrypt-cloaking-update"
    echo "$user_strategy" > "$MODPATH/config/current-strategy"
    echo "$CLOAKINGRULESLINK" > "$MODPATH/config/cloaking-rules-link"
    echo "- Done! Changes will apply on next start"
}

unknown_command() {
    echo "! Unknown command: $1"
}

if [ -z "$1" ]; then
    command_info
else
    case "$1" in
        start) start_service ;;
        stop) stop_service ;;
        toggle) toggle_service ;;
        restart) restart_service ;;
        setup) setup ;;
        *) unknown_command "$1" ;;
    esac
fi