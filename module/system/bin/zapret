MODPATH="/data/adb/modules/zapret"
CURRENTSTRATEGY=$(cat "$MODPATH/config/current-strategy" 2>/dev/null || echo "Unknown")
DNSCRYPTENABLE=$(cat "$MODPATH/config/dnscrypt-enable" 2>/dev/null || echo "Unknown")
CLOAKINGUPDATE=$(cat "$MODPATH/config/dnscrypt-cloaking-update" 2>/dev/null || echo "Unknown")
CLOAKINGRULESLINK=$(cat "$MODPATH/config/cloaking-rules-link" 2>/dev/null || echo "Unknown")

command_info() {
    echo "! Zapret Module for Magisk; @sevcator/zapret-magisk"
    echo "- Current strategy: $CURRENTSTRATEGY"
    case "$DNSCRYPTENABLE" in
        1) echo "- DNSCrypt-Proxy enabled" ;;
        0) echo "- No DNS" ;;
        *) echo "- Unknown DNS state" ;;
    esac

    echo ""
    echo "- Available commands:"
    echo "zapret start    - Start the zapret service"
    echo "zapret stop     - Stop the zapret service"
    echo "zapret restart  - Restart the zapret service"
    echo "zapret toggle   - Toggle the zapret service"
    echo "zapret setup    - Configure the zapret service"
}

start_service() {
    pgrep -f "nfqws" > /dev/null && echo "! nfqws is already running" || ( "$MODPATH/service.sh" > /dev/null 2>&1 & echo "- Service started" )
}

stop_service() {
    su -c "$MODPATH/uninstall.sh" > /dev/null 2>&1 & echo "- Service stopped"
}

toggle_service() {
    pgrep -f "nfqws" > /dev/null && stop_service || start_service
}

restart_service() {
    stop_service
    sleep 1
    start_service
}

setup() {
    echo ""
    read -p "- Enable DNSCrypt-Proxy? Are you sure? " dns_mode
    [[ "${dns_mode,,}" =~ ^(y|yes)$ ]] && echo "- OK" || echo "- Ignoring"
    
    echo ""
    echo "- Available strategies"
    for strategy in "$MODPATH/strategy"/*.sh; do
        echo "$(basename "$strategy" .sh)"
    done

    read -p "- Enter the strategy name: " user_strategy
    [ -f "$MODPATH/strategy/$user_strategy.sh" ] && echo "- OK"
    
    if [[ "$dns_mode" == "1" ]]; then
        read -p "- Auto-update hosts for DNSCrypt-Proxy? [y/N]: " dnscrypt_cloaking_update_select
        if [[ "${dnscrypt_cloaking_update_select,,}" =~ ^(y|yes)$ ]]; then
            cloaking_update=1
            echo "- Current link: $CLOAKINGRULESLINK"
            read -p "- Enter the link to the hosts file: " link_cloaking_rules
            if [ -z "$link_cloaking_rules" ]; then
                echo "- No changes to the link"
            else
                curl -fsSL --head "$link_cloaking_rules" >/dev/null 2>&1 || wget -q --spider "$link_cloaking_rules" && echo "- Link updated" || echo "! Link not reachable"
            fi
        else
            cloaking_update=0
            echo "- Auto-update disabled"
        fi
    fi

    echo "$dns_mode" > "$MODPATH/config/dnscrypt-enable"
    echo "$cloaking_update" > "$MODPATH/config/dnscrypt-cloaking-update"
    echo "$user_strategy" > "$MODPATH/config/current-strategy"
    echo "$link_cloaking_rules" > "$MODPATH/config/cloaking-rules-link"
    echo "- Done! Changes will be applied on next start"
}

unknown_command() {
    echo "! Unknown command: $1"
}

if [ -z "$1" ]; then
    command_info
else
    case "$1" in
        start) start_service ;;
        stop) stop_service ;;
        toggle) toggle_service ;;
        restart) restart_service ;;
        setup) setup ;;
        *) unknown_command "$1" ;;
    esac
fi
