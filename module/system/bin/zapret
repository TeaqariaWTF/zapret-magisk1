MODPATH="/data/adb/modules/zapret"

CURRENTSTRATEGY=$(cat "$MODPATH/config/current-strategy" 2>/dev/null || echo "Unknown")
DNSCRYPTENABLE=$(cat "$MODPATH/config/dnscrypt-enable" 2>/dev/null || echo "Unknown")
CLOAKINGUPDATE=$(cat "$MODPATH/config/dnscrypt-cloaking-update" 2>/dev/null || echo "Unknown")
CLOAKINGRULESLINK=$(cat "$MODPATH/config/cloaking-rules-link" 2>/dev/null || echo "Unknown")

start_service() {
    if pgrep -f "nfqws" > /dev/null; then
        echo "! nfqws is already running"
    else
        "$MODPATH/service.sh" > /dev/null 2>&1 &
        echo "- Service started"
    fi
}

stop_service() {
    su -c "$MODPATH/uninstall.sh" > /dev/null 2>&1 &
    echo "- Service stopped"
}

toggle_service() {
    if pgrep -f "nfqws" > /dev/null; then
        stop_service
    else
        start_service
    fi
}

restart_service() {
    stop_service
    sleep 1
    start_service
}

setup() {
    echo ""
    read -p "- Enable DNSCrypt-Proxy? This will disable ports 53 and 853, which can break VPN, tethering, and other network functions. Are you sure? " dns_mode
    answer_lower=$(echo "$answer" | tr '[:upper:]' '[:lower:]')
    if [[ "$answer_lower" == "y" || "$answer_lower" == "yes" ]]; then
        echo "- OK"
    else
        echo "- Ignoring"
    fi

    echo ""
    echo "- Available strategies"
    for strategy in "$MODPATH/strategy"/*.sh; do
        echo "$(basename "$strategy" .sh)"
    done
    read -p "- Enter the strategy name: " user_strategy
    if [ -f "$MODPATH/strategy/$user_strategy.sh" ]; then
        echo "- OK"
    fi

    if [ "$dns_mode" -eq 1 ]; then
        read -p "- Do you want to automatically update hosts for DNSCrypt-Proxy? [y/N]: " dnscrypt_cloaking_update
        dnscrypt_cloaking_update=$(echo "$dnscrypt_cloaking_update" | tr '[:upper:]' '[:lower:]')

        if [[ "$dnscrypt_cloaking_update" == "y" || "$dnscrypt_cloaking_update" == "yes" ]]; then
            echo "1" > "$MODPATH/config/dnscrypt-cloaking-update"

            if [ -f "$MODPATH/config/cloaking-rules-link" ]; then
                current_link_cloaking=$(cat "$MODPATH/config/cloaking-rules-link")
                echo "- Current link: $current_link_cloaking"
            else
                echo "- No link to hosts file currently set"
                current_link_cloaking=""
            fi

            read -p "- Enter the new link to the hosts file (or leave blank to keep current): " link_cloaking_rules

            if [ -z "$link_cloaking_rules" ]; then
                echo "- No changes to the link, keeping existing: $current_link_cloaking"
            else
                if curl -fsSL --head "$link_cloaking_rules" >/dev/null 2>&1 || wget -q --spider "$link_cloaking_rules"; then
                    echo "$link_cloaking_rules" > "$MODPATH/config/cloaking-rules-link"
                    echo "- Link updated to: $link_cloaking_rules"
                else
                    echo "! The provided link is not reachable. Keeping: $current_link_cloaking"
                fi
            fi
        else
            echo "0" > "$MODPATH/config/dnscrypt-cloaking-update"
            echo "- Auto-update disabled"
        fi
    else
        echo "0" > "$MODPATH/config/dnscrypt-cloaking-update"
    fi

    echo "$dns_mode" > "$MODPATH/config/current-dns-mode"
    echo "$rules" > "$MODPATH/config/current-advanced-rules"
    [[ -n "$cloaking_link" ]] && echo "$cloaking_link" > "$MODPATH/config/cloaking-rules-link"
    [[ -n "$blocked_link" ]] && echo "$blocked_link" > "$MODPATH/config/blocked-names-link"
    echo "- Done!"
    echo "! Changes will be applied on next start"
}

command_info() {
    echo "@ Zapret Module - GitHub: sevcator/zapret-magisk <3"
    echo ""
    echo "- Current strategy: $CURRENTSTRATEGY"

    if [ "$CURRENTDNSMODE" -eq 2 ]; then
        echo "- Current DNS Mode: DNSCrypt-Proxy"
    elif [ "$CURRENTDNSMODE" -eq 1 ]; then
        echo "- Current DNS Mode: Plain ($CURRENTDNS)"
    elif [ "$CURRENTDNSMODE" -eq 0 ]; then
        echo "- Current DNS Mode: None"
    else
        echo "- Current DNS Mode: $CURRENTDNS"
    fi

    if [ "$CURRENTADVANCEDRULES" -eq 1 ]; then
        echo "- Current advanced rules: Enabled"
    elif [ "$CURRENTADVANCEDRULES" -eq 0 ]; then
        echo "- Current advanced rules: Disabled"
    else
        echo "- Current advanced rules: Unknown"
    fi

    echo ""
    echo "- Available commands:"
    echo "zapret start    - Start the zapret service"
    echo "zapret stop     - Stop the zapret service"
    echo "zapret restart  - Restart the zapret service"
    echo "zapret toggle   - Toggle the zapret service"
    echo "zapret setup    - Configure the zapret service"
}

unknown_command() {
    echo "! Unknown command: $1"
}

if [ -z "$1" ]; then
    command_info
else
    case "$1" in
        start)
            start_service
            ;;
        stop)
            stop_service
            ;;
        toggle)
            toggle_service
            ;;
        restart)
            restart_service
            ;;
        setup)
            setup
            ;;
        *)
            unknown_command "$1"
            ;;
    esac
fi
